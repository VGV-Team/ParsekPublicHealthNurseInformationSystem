@model ParsekPublicHealthNurseInformationSystem.ViewModels.AdminConsoleViewModel
@using Microsoft.Ajax.Utilities
@using ParsekPublicHealthNurseInformationSystem.Models
@using ParsekPublicHealthNurseInformationSystem.ViewModels

@{
    ViewBag.Title = "Zaposleni";
}

<h2>Urejanje podatkov</h2>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@using (Html.BeginForm("SelectEmployee", "AdminConsole", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h3>@Model.ViewMessage</h3>

            @Html.Raw(Globals.GenerateDropDown(Model.AllEmployees, "EmployeeId", false))
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Izpiši podatke" class="btn btn-default" />
                </div>
            </div>
        </div>
}

@if (Model.EmployeeId != null)
{
    using (Html.BeginForm("Edit", "AdminConsole", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h2>Podatki zaposlenega</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.JobTitleList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedJobTitleId, new SelectList(Model.JobTitleList, "JobTitleId", "Title"), htmlAttributes: new { @class = "form-control dropdown", @id = "JobTitleDropdown"  })
                    @Html.ValidationMessageFor(model => model.JobTitleList, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contractor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contractor, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Contractor, "", new { @class = "text-danger" })
                </div>
            </div>
            
            
            
            <div class="form-group" id="DistrictDropdown">
                @Html.LabelFor(model => model.Districts, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedDistrictId, new SelectList(Model.Districts, "DistrictId", "Name"), htmlAttributes: new { @class = "form-control dropdown" })
                    @Html.ValidationMessageFor(model => model.Districts, "", new { @class = "text-danger" })
                </div>
            </div>
            



            <script>
                        

            $('#DistrictDropdown').hide();

            if ($('#JobTitleDropdown').val() == 3)
            {
                $('#DistrictDropdown').show();
            }

            $('#JobTitleDropdown').on('change',
                function () {
                    if (this.value == 3) {
                        $("#DistrictDropdown").show();
                    } else {
                        $("#DistrictDropdown").hide();
                    }
                });

            </script>


            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Spremeni podatke" class="btn btn-default" />
                </div>
            </div>

            @Html.ActionLink("Izbriši zaposlenega", "DeleteUser", new { employeeId = Model.Id })

        </div>
    }
}

