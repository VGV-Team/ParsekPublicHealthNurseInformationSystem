@model ParsekPublicHealthNurseInformationSystem.ViewModels.AddCarePatientViewModel

@{
    ViewBag.Title = "Moji pacienti";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@using (Html.BeginForm("AddCarePatient", "AddPatient", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <h4>Oskrbovani pacienti:</h4>
        <hr />
        <ul>
            @for (int i = 0; i < Model.CarePatients.Count; i++)
            {

                <li>
                    @Model.CarePatients[i].Name  @Model.CarePatients[i].Surname, @Model.CarePatients[i].BirthDate.ToString("d.M.yyyy")
            </li>
            }
        </ul>

        <br/>
        <h4>Dodajanje oskrbovanih pacientov</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h3>@Model.ViewMessage</h3>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostOffices, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedPostOfficeId, new SelectList(Model.PostOffices, "PostOfficeId", "FullName"), "-- Izberi --", htmlAttributes: new { @class = "form-control dropdown" })
                @Html.ValidationMessageFor(model => model.PostOffices, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="DistrictDropdown">
            @Html.LabelFor(model => model.Districts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedDistrictId, new SelectList(Model.Districts, "DistrictId", "Name"), "-- Izberi --", htmlAttributes: new { @class = "form-control dropdown" })
                @Html.ValidationMessageFor(model => model.Districts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Spol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, "-- Izberi --", new { @class = "form-control dropdown", @id = "JobTitleDropdown" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Relationships, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedRelationshipId, new SelectList(Model.Relationships, "RelationshipId", "Name"), "-- Izberi --", htmlAttributes: new { @class = "form-control dropdown" })
                @Html.ValidationMessageFor(model => model.Relationships, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}
