@using ParsekPublicHealthNurseInformationSystem.Models
@using ParsekPublicHealthNurseInformationSystem.ViewModels
@model ParsekPublicHealthNurseInformationSystem.ViewModels.VisitViewModel

@{
    ViewBag.Title = "Obisk";
}

<h2>Podrobnosti obiska</h2>



@if (Model.MainPatient != null)
{
    @Html.ActionLink(Model.MainPatient.FullNameWithCode, "EnterData", "Visit", 
        new { visitId = Model.VisitId, generalOnly = false, patientId = Model.MainPatient.PatientId }, 
        new { @class = "btn btn-primary", @style = "color:white" })
}

@foreach (var childPatient in Model.ChildPatients ?? new List<Patient>())
{
    @Html.ActionLink(childPatient.FullNameWithCode, "EnterData", "Visit",
        new { visitId = Model.VisitId, generalOnly = false, patientId = childPatient.PatientId },
        new { @class = "btn btn-primary", @style = "color:white" })
}

<hr/>

@if (Model.ActivityInputs != null && Model.ActivityInputs.Count > 0)
{
    using (Html.BeginForm("SaveData", "Visit"))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(m => m.VisitId)
        @Html.HiddenFor(m => m.PatientId)

        if (Model.VisitDate.Date == DateTime.Now.AddDays(-1).Date)
        {
            <div>
                <div class="form-group">
                    Dejanski datum obiska:
                    @Html.EditorFor(x => x.VisitDate, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <hr />
        }
        else if (Model.VisitDate.Date < DateTime.Now.AddDays(-1).Date)
        {
            <div>
                <div class="form-group">
                    Dejanski datum obiska:
                    <span title="Čas za vnos podatkov je pretekel.">
                        @Html.EditorFor(x => x.VisitDate, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
                    </span>
                </div>
            </div>
            <hr />
        }

        int count = 0;

        for (int i = 0; i < Model.ActivityInputs.Count; i++)
        {
            <div>
                <label class="panel-title">@Model.ActivityInputs[i].ActivityTitle</label>
                

                @for (int j = 0; j < Model.ActivityInputs[i].ActivityInputDatas.Count; j++)
                {
                    <div class="form-group">


                        @Html.HiddenFor(x => x.ActivityInputIds[count])



                        @Html.Label(Model.ActivityInputIds[count].ToString(), Model.ActivityInputs[i].ActivityInputDatas[j].ActivityInputTitle, htmlAttributes: new {@class = "control-label col-md-2"})

                        @if (Model.VisitDate.Date < DateTime.Now.AddDays(-1).Date)
                        {
                            <span title="Čas za vnos podatkov je pretekel.">
                                @Html.TextBoxFor(x => x.ActivityInputValues[count], new {@class = "form-control", @disabled = "disabled"})
                            </span>
                        }
                        else if (Model.ActivityInputs[i].ActivityInputDatas[j].ReadOnly)
                        {
                            @Html.TextBoxFor(x => x.ActivityInputValues[count], new {@class = "form-control", @readonly = "true"})
                            <p style="color: mediumpurple;">Vrednost prenešena iz prvega obiska</p>
                        }
                        else if (Model.ActivityInputs[i].ActivityInputDatas[j].Required)
                        {
                            @Html.TextBoxFor(x => x.ActivityInputValues[count], new {@class = "form-control", @required = "true"})
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.ActivityInputValues[count], new {@class = "form-control"})
                        }
                    </div>

                    //@Html.TextBoxFor(x => x.ActivityInputIds[count])
                    //<input type="text" id="ActivityInputValues_@count" value="text" />
                    //<input type="hidden" id="ActivityInputIds_@count" value="@Model.ActivityInputs[i].ActivityInputDatas[j].ActivityInputId" />



                    // ActivityInputId[count] = [i][j]
                    // input [count]

                    count++;
                }
                <hr/>

            </div>
        }

        if (Model.VisitDate.Date < DateTime.Now.AddDays(-1).Date)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <span title="Čas za vnos podatkov je pretekel.">
                        <input type="button" value="Shrani" class="btn btn-default disabled" />
                    </span>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Shrani" class="btn btn-default" />
                </div>
            </div>
        }




    }
}