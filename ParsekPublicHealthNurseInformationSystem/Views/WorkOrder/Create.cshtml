@using Microsoft.Ajax.Utilities
@using ParsekPublicHealthNurseInformationSystem.ViewModels
@model ParsekPublicHealthNurseInformationSystem.ViewModels.WorkOrderViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Nov delovni nalog</h2>

@using (Html.BeginForm("SubmitWorkOrder","WorkOrder"))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.SelectedActivityId)

    @Html.Raw(Model.GenerateDropDown(Model.AllPatients, "PatientIds"))
    <div class="form-group">
        @Html.LabelFor(model => model.PatientIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PatientIds, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PatientIds, "", new { @class = "text-danger" })
        </div>
    </div>
    

    <div class="form-group">
        @Html.LabelFor(model => model.DateTimeOfFirstVisit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateTimeOfFirstVisit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateTimeOfFirstVisit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MandatoryFirstVisit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.MandatoryFirstVisit)
                @Html.ValidationMessageFor(model => model.MandatoryFirstVisit, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MultipleVisits, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.MultipleVisits)
                @Html.ValidationMessageFor(model => model.MultipleVisits, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(function () {
            $("#MultipleVisits").click(function () {
                if ($(this).is(":checked")) {
                    $("#timeEntry").show();
                } else {
                    $("#timeEntry").hide();
                }
            });
        });
    </script>

    <div class="form-group" id="timeEntry" style="display: none;">
        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfVisits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfVisits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfVisits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-10">
            @Html.EnumDropDownListFor(x => x.TimeType, "-- Izberi --", new { @class = "form-control" })
        </div>

        <div class="col-md-10" id=@WorkOrderViewModel.VisitTimeType.TimeInterval style="display: none;">
            <div class="form-group">
                @Html.LabelFor(model => model.TimeInterval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeInterval, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeInterval, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-10" id=@WorkOrderViewModel.VisitTimeType.TimeFrame style="display: none;">
            <div class="form-group">
                @Html.LabelFor(model => model.TimeFrame, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeFrame, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeFrame, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <script>
            $('#TimeType').on('change',
                function () {
                    $(@WorkOrderViewModel.VisitTimeType.TimeInterval).hide();
                    $(@WorkOrderViewModel.VisitTimeType.TimeFrame).hide();
                    switch (this.value)
                    {
                    case "1":
                        $(@WorkOrderViewModel.VisitTimeType.TimeFrame).show();
                        break;
                    case "2":
                        $(@WorkOrderViewModel.VisitTimeType.TimeInterval).show();
                        break;
                    }
                });
        </script>
    </div>



    


    

    <div class="form-group">
        
        @Html.HiddenFor(m => m.EnterMedicine)
        @if (Model.EnterMedicine)
        {
            @Html.Raw(Model.GenerateDropDown(Model.AllMedicines, "MedicineIds"))
            <div class="form-group">
                @Html.LabelFor(model => model.MedicineIds, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MedicineIds, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.MedicineIds, "", new {@class = "text-danger"})
                </div>
            </div>
        }
        
        @Html.HiddenFor(m => m.EnterBloodSample)
        @if (Model.EnterBloodSample)
        {
            @Html.LabelFor(model => model.BloodVialColor, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(
                    model => model.BloodVialColor,
                    new SelectList(Model.AllColors),
                    "-- Izberi --",
                    htmlAttributes: new {@class = "form-control dropdown"})
                @Html.ValidationMessageFor(model => model.BloodVialColor, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.BloodVialCount, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.BloodVialCount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BloodVialCount, "", new {@class = "text-danger"})
            </div>
        }

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Prekliči", "Index", "Home")
</div>